package $PACKAGE;

import com.google.common.util.concurrent.ListenableFuture;

import com.microsoft.listservices.Credentials;
import com.microsoft.listservices.DiscoveryInformation;
import com.microsoft.listservices.Query;
import com.microsoft.listservices.SPList;
import com.microsoft.listservices.SPListField;
import com.microsoft.listservices.SPListItem;
import com.microsoft.listservices.SharepointListsClient;

import java.util.List;

public class ListServicesClient {
    private static final String ENDPOINT_URL = "$ENDPOINTURL";
    private static final String SITE_URL = "$SITEURL";
    private SharepointListsClient client;

    public ListServicesClient() {
        Credentials credentials = new Credentials() {
            @Override
            public void prepareRequest(com.microsoft.listservices.http.Request request) {
                // TODO: Implement this invoking AAD or another credentials provider
            }
        };

        client = new SharepointListsClient(ENDPOINT_URL, SITE_URL, credentials);
    }

    public ListenableFuture<Void> deleteListItem(SPListItem listItem, String listName) {
        return client.deleteListItem(listItem, listName);
    }

    public ListenableFuture<Void> insertListItem(SPListItem listItem, SPList list) {
        return client.insertListItem(listItem, list);
    }

    public ListenableFuture<Void> updateListItem(SPListItem listItem, SPList list) {
        return client.updateListItem(listItem, list);
    }

    public ListenableFuture<List<String>> getColumnsFromDefaultView(String listName) {
        return client.getColumnsFromDefaultView(listName);
    }

    public ListenableFuture<SPList> getList(String listName) {
        return client.getList(listName);
    }

    public ListenableFuture<List<SPListField>> getListFields(String listName, Query query) {
        return client.getListFields(listName, query);
    }

    public ListenableFuture<List<SPListItem>> getListItems(String listName, Query query) {
        return client.getListItems(listName, query);
    }

    public ListenableFuture<List<SPList>> getLists(Query query) {
        return client.getLists(query);
    }

    public ListenableFuture<String> getUserProperties() {
        return client.getUserProperties();
    }

    public ListenableFuture<List<DiscoveryInformation>> getDiscoveryInfo() {
        return client.getDiscoveryInfo();
    }

    public ListenableFuture<List<DiscoveryInformation>> getDiscoveryInfo(String discoveryEndpoint) {
        return client.getDiscoveryInfo(discoveryEndpoint);
    }

    public ListenableFuture<String> getWebTitle() {
        return client.getWebTitle();
    }
}